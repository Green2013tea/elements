// Aliquot a solution into a specified plate.
// optionally premix the solution before aliquoting
protocol Aliquot

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/anthalib/wutil"
	"github.com/antha-lang/antha/antha/anthalib/mixer"
	//"fmt"
)


// Input parameters for this protocol (data)
Parameters (
	SolutionVolume Volume
	VolumePerAliquot  Volume
	NumberofAliquots int
	PreMix bool // optional field. Select if the solution to be aliquoted should be premixed prior to transer
	ChangeSolutionName string // optional field to change the name of the component
	OptimisePlateUsage bool
	Incubation bool
)

// Data which is returned from this protocol, and data types
Data (

)


// Physical Inputs to this protocol with types
Inputs (
	Solution *wtype.LHComponent
	OutPlate *wtype.LHPlate // this time we're specifying what plate we're using

)

// Physical outputs from this protocol with types
Outputs (
	Aliquots []*wtype.LHComponent
)

Requirements {

}

// Conditions to run on startup
Setup {

}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	number := SolutionVolume.SIValue()/VolumePerAliquot.SIValue()
	possiblenumberofAliquots, _ := wutil.RoundDown(number)
	if possiblenumberofAliquots < NumberofAliquots {
		Errorf("Not enough solution for this many aliquots")
	}

	// if PreMix is selected change liquid type accordingly
	if PreMix {
		Solution.Type = wtype.LTPreMix
	}

	// if a solution name is given change the name
	if ChangeSolutionName != ""{
		Solution.CName = ChangeSolutionName
	}

	aliquots := make([]*wtype.LHComponent,0)


	for i := 0; i < NumberofAliquots; i++ {
		if Solution.TypeName() == "dna"{
		Solution.Type = wtype.LTDoNotMix
		}
		aliquotSample := mixer.Sample(Solution, VolumePerAliquot)

		// the MixInto command is used instead of Mix to specify the plate
		// MixInto allows you to specify the exact plate to MixInto (i.e. rather than just a plate type. e.g. barcode 123214234)
		// the three input fields to the MixInto command represent
		// 1. the plate
		// 2. well location as a  string e.g. "A1" (in this case leaving it blank "" will leave the well location up to the scheduler),
		// 3. the sample or array of samples to be mixed
		var aliquot *wtype.LHComponent
		if OptimisePlateUsage{
		aliquot = MixNamed(OutPlate.Type, "","AliquotPlate", aliquotSample)
		}else{
		aliquot = MixInto(OutPlate, "", aliquotSample)
		}
		if aliquot != nil{
				aliquots = append(aliquots,aliquot)
			}
	}

	if Incubation == true{
		//var incubationtype *wtype.LHComponent
		//incubationtype.Type = wtype.LTWater
		//fmt.Println("OK")
		aliquots[len(aliquots)-1].Type = wtype.LTPause
		//fmt.Println(aliquots)

	}

	Aliquots = aliquots
}
// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed
//correctly. Optionally, destructive tests can be performed to validate
//results on a dipstick basis
Validation {

}
