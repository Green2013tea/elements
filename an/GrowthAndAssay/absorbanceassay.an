protocol AbsorbanceMeasurement

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/anthalib/mixer"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/platereader"
)

Parameters (
	AbsorbanceWavelength Length
	DilutionVolume Volume
	ExtinctionCoefficient float64
)

Data (
	AbsorbanceMeasurement float64
	ActualConcentration Concentration
	
)

Inputs (
	SampleForReading *wtype.LHComponent
	Diluent *wtype.LHComponent
	Plate *wtype.LHPlate
)

Outputs (
)

Requirements {
}

Setup {
}

Steps {
	
	// dilute sample
	diluentSample:=mixer.Sample(Diluent, DilutionVolume)

	sampleforreading := mixer.SampleAll(SampleForReading)
	
	dilutedSample:=MixTo(Plate.Type,"",1,sampleforreading, diluentSample)
	//dilutedSample:=Mix(sampleforreading, diluentSample)
	
	// read
	abs := platereader.ReadAbsorbance(Plate, dilutedSample, AbsorbanceWavelength.RawValue())
	
	// prepare blank and read
	blankSample := MixTo(Plate.Type,"",1,mixer.Sample(Diluent, dilutedSample.Volume()))
	
	blankabs := platereader.ReadAbsorbance(Plate, blankSample, AbsorbanceWavelength.RawValue())
	
	// blank correct
	blankcorrected, err := platereader.Blankcorrect(blankabs,abs)
	if err!=nil {
		Errorf(err.Error())
	}
	
	// estimate pathlength
	pathlength,err := platereader.EstimatePathLength(Plate,dilutedSample.Volume())
	
	if err!=nil {
		Errorf(err.Error())
	}
	
	// pathlength correct
    pathlengthcorrected := platereader.PathlengthCorrect(pathlength, blankcorrected)

	// calculate actual conc based on extinction coefficient
	actualconc := platereader.Concentration(pathlengthcorrected, ExtinctionCoefficient)

	ActualConcentration = actualconc
	
	AbsorbanceMeasurement = abs.Reading
	
}

Analysis {
}

Validation {
}

