protocol Synthesis

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/microArch/factory"
	"fmt"
)

// Input parameters for this protocol (data)
Parameters (
	PartsWithOverhangs []wtype.DNASequence
)

// Physical Inputs to this protocol with types
Inputs (
)


// Physical outputs from this protocol with types
Outputs (
	Components []*wtype.LHComponent
)

// Data which is returned from this protocol, and data types
Data (
	
	
)

Requirements {}

// Conditions to run on startup
Setup {}


Steps {
	// Element with mock synthesises DNA. Converts DNA sequence type to LHComponent.
	//var dna *wtype.LHComponent
	components := make([]*wtype.LHComponent, 0)
	
	fmt.Println("Parts:",PartsWithOverhangs)
	for i, part := range PartsWithOverhangs {
		
		dna := factory.GetComponentByType("dna")
		dna.CName = part.Nm
		fmt.Println("dna:",i,dna)
		components = append(components,dna)
		}
	Components = components
	
	fmt.Println("Components source:",Components)
}
	
	


Analysis {
}


Validation {
}