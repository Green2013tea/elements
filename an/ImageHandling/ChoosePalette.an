//Select the palette of colors with which the image will be modified. This element uses names defined
//in the standard library.
protocol ChoosePalette

import (
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/image"
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"image/color"
)

// Input parameters for this protocol (data)
Parameters (
	PaletteID string         //Name of the Palette to use. The names are in the pixelToPlate package in the standard library.
	AvailableColors []string //ID of the available colors. Leave blank if you want to use the palette
)

// Data which is returned from this protocol, and data types
Data (
	Palette color.Palette //Selected palette
	Error error           //error message
)

// Physical Inputs to this protocol with types
Inputs ()

// Physical outputs from this protocol with types
Outputs ()

Requirements {
}

// Conditions to run on startup
Setup {
}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	//-----------------------------------------------------------
	//Globals
	//-----------------------------------------------------------

	var palette color.Palette
	var tempColor color.Color

	//-----------------------------------------------------------
	//Creating palette
	//-----------------------------------------------------------

	//Loading Palette library
	palette = image.SelectLibrary(PaletteID)

	//If only some colors are available
	if AvailableColors != nil {
		for i := range AvailableColors {
			tempColor = image.SelectColor(AvailableColors[i])
			palette = append(palette, tempColor)
		}
	}

	//-----------------------------------------------------------
	//Returning retrieved palette
	//-----------------------------------------------------------

	Palette = palette

}

// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed correctly
// Optionally, destructive tests can be performed to validate results on a
// dipstick basis
Validation {

}
