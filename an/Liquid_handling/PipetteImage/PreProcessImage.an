protocol PreProcessImage

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/image"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/download"
	)


// Input parameters for this protocol (data)
Parameters (
	
	Imagefilename string // name of image file or if using URL use this field to set the desired filename
	UseURL bool // select this if getting the image from a URL
	URL string // enter URL link to the image file here if applicable
	Negative bool
	Rotate bool
	AutoRotate bool
	PosterizeImage bool
	PosterizeLevels int
	Palette string
	CheckAllResizeAlgorithms bool
)

// Data which is returned from this protocol, and data types
Data (
	ProcessedImageFilename string
)


// Physical Inputs to this protocol with types
Inputs (
	OutPlate *wtype.LHPlate
)

// Physical outputs from this protocol with types
Outputs (

)

Requirements {
	
}

// Conditions to run on startup
Setup {
	
}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {
	
	// if image is from url, download
	if UseURL {
		_, err := download.UrlToFile(URL, Imagefilename)
		if err != nil{
			Errorf(err.Error())
		}
	}

	chosencolourpalette := image.AvailablePalettes()[Palette]
	
	if CheckAllResizeAlgorithms {
			image.CheckAllResizealgorithms(Imagefilename,OutPlate,Rotate,image.AllResampleFilters)
	}
	_, _, newimagename := image.ImagetoPlatelayout(Imagefilename, OutPlate, &chosencolourpalette, Rotate,AutoRotate) 
	
	// if posterize rerun 
	if PosterizeImage{
		_, Imagefilename = image.Posterize(newimagename, PosterizeLevels)
		
		_, _, newimagename = image.ImagetoPlatelayout(Imagefilename, OutPlate, &chosencolourpalette, Rotate,AutoRotate)
	}
	
	ProcessedImageFilename = newimagename
	

}
// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed correctly
// Optionally, destructive tests can be performed to validate results on a
// dipstick basis
Validation {
	
}

