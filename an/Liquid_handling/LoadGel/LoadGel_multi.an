protocol LoadGel_multi

import (
    "github.com/antha-lang/antha/antha/anthalib/mixer"
    "github.com/antha-lang/antha/antha/anthalib/wtype"
    "fmt"
	"strconv"
)

Parameters (
    SampleNames     []string
    LoadVolume      Volume

    WaterVolume     Volume
    WaterName       string

//    RunVoltage      Int
//    RunLength       Time
)

Inputs (
    Water           *wtype.LHComponent  //preload well with 10uL of water
    Protein         *wtype.LHComponent  //protein samples for running
    InPlate         *wtype.LHPlate      //96 well plate with water, marker and samples
    GelPlate        *wtype.LHPlate      //Gel to load ie OutPlate
)


Outputs (
    RunSolutions   []*wtype.LHComponent
)

Data (
    Status          string
)
    //Run length in cm, and protein band height and pixed density after digital scanning

Setup {
}

Steps {


	// work out well coordinates for any plate
	wellpositionarray := make([]string, 0)

	
	//alphabet := "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	alphabet := []string{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J",
		"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X",
		"Y", "Z", "AA", "BB", "CC", "DD", "EE", "FF"}
	//k := 0
	for j := 0; j < GelPlate.WlsY; j++ {
		for i := 0; i < GelPlate.WlsX; i++ { //countingfrom1iswhatmakesushuman := j + 1
			//k = k + 1
			wellposition := string(alphabet[j]) + strconv.Itoa(i+1)
			//fmt.Println(wellposition, k)
			wellpositionarray = append(wellpositionarray, wellposition)
		}

	}


	RunSolutions = make([]*wtype.LHComponent,0)

	var RunSolution *wtype.LHComponent


	for k, SampleName := range SampleNames {
    samples := make ([]*wtype.LHComponent, 0)
    waterSample := mixer.Sample(Water, WaterVolume)
    waterSample.CName = WaterName
    samples = append(samples, waterSample)

    loadSample := mixer.Sample(Protein, LoadVolume)
    loadSample.CName = SampleName
    samples = append(samples, loadSample)
    fmt.Println ("This is a list of samples for loading:", samples)

    RunSolution = MixTo(GelPlate.Type,wellpositionarray[k], 0, samples...)
	RunSolutions = append(RunSolutions,RunSolution)
	}
}

Analysis {
}

Validation {
}
