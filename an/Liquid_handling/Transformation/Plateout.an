protocol PlateOut

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/anthalib/mixer"
)

// Input parameters for this protocol (data)
Parameters (
	Plateoutvolume wunit.Volume
	IncubationTemp Temperature
	IncubationTime Time
	DilutionX int
)

// Data which is returned from this protocol, and data types
Data (
)


// Physical Inputs to this protocol with types
Inputs (
	RecoveredCells *wtype.LHComponent
	Diluent *wtype.LHComponent
	AgarPlate *wtype.LHPlate
)

// Physical outputs from this protocol with types
Outputs (
	Platedculture *wtype.LHComponent
)

Requirements {
}

// Conditions to run on startup
Setup {	
}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	plateout := make([]*wtype.LHComponent,0)

	if Diluent != nil && DilutionX > 1 {
	diluentsample := mixer.SampleForTotalVolume(Diluent,Plateoutvolume)
	plateout = append(plateout,diluentsample)
	// redeclare Plateoutvolume for adjusted volume to add of recovery mixture based on dilution ratio
	Plateoutvolume = wunit.NewVolume(Plateoutvolume.RawValue()/float64(DilutionX),Plateoutvolume.Unit().PrefixedSymbol())
	
	}
	plateoutsample := mixer.Sample(RecoveredCells, Plateoutvolume) 
	plateout = append(plateout,plateoutsample)
	platedculture := MixInto(AgarPlate, "",  plateout...)
	platedculture = Incubate(platedculture,IncubationTemp,IncubationTime,false)
	Platedculture = platedculture
	
	
}

// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
	
}

// A block of tests to perform to validate that the sample was processed correctly
// Optionally, destructive tests can be performed to validate results on a
// dipstick basis
Validation {
	
	
}
