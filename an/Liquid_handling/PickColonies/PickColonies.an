
// row  
protocol PickColonies

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	
	"github.com/antha-lang/antha/antha/anthalib/mixer"
	//"strconv"
)


// Input parameters for this protocol (data)
Parameters (
	ColonyVolume Volume
	//MediaVolume  Volume
	ColonyLocations []string
)

// Data which is returned from this protocol, and data types
Data (
	
)


// Physical Inputs to this protocol with types
Inputs (
	Colonytype *wtype.LHComponent
	InPlate *wtype.LHPlate
	OutPlatewithMedia *wtype.LHPlate
)

// Physical outputs from this protocol with types
Outputs (
	ColoniesinRecoveryMedia []*wtype.LHComponent
)

Requirements {
	
}

// Conditions to run on startup
Setup {
	
}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {
	
	components := make([]*wtype.LHComponent,0)
	ColoniesinRecoveryMedia = make([]*wtype.LHComponent,0)
	var colonyinrecoverymedia *wtype.LHComponent
	
	
	
	for _, colonylocation := range ColonyLocations {
	
	//togetplateid := mixer.Sample(Colonytype,ColonyVolume)
	
	//id := togetplateid.Loc
	
	colony := wtype.NewLHComponent()
	
	colony.Loc = colonylocation
	//colony.LContainer.Plateid= id
	
	realcolonysample := mixer.Sample(Colonytype,ColonyVolume)
	
	components = append(components,realcolonysample)
	
	colonyinrecoverymedia = MixInto(OutPlatewithMedia,"",components...)
	
	ColoniesinRecoveryMedia = append(ColoniesinRecoveryMedia,colonyinrecoverymedia)
	}
	
}
// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed correctly
// Optionally, destructive tests can be performed to validate results on a
// dipstick basis
Validation {
	
}

