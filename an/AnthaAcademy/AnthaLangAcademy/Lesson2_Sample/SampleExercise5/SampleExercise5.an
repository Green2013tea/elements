// example protocol demonstrating the use of the SampleForTotalVolume function
protocol SampleExercise5

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/anthalib/mixer"
)


// Input parameters for this protocol (data)
Parameters (
	DilutionVolume Volume // e.g. 2ul
	TotalVolume Volume // e.g. 20ul
)

// Data which is returned from this protocol, and data types
Data (

)


// Physical Inputs to this protocol with types
Inputs (
	Solution *wtype.LHComponent
	Diluent *wtype.LHComponent
)

// Physical outputs from this protocol with types
Outputs (
	DilutedSample1 *wtype.LHComponent
	DilutedSample2 *wtype.LHComponent
	DilutedSample3 *wtype.LHComponent
	DilutedSample4 *wtype.LHComponent

)

Requirements {

}

// Conditions to run on startup
Setup {

}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	// make empty slice of LHComponents (i.e. of length 0) ready to sequentially add all samples to
	// See golangbook chapter 6 for more details on slices and arrays
	dilutedsample1 := make([]*wtype.LHComponent,0)
	dilutedsample2 := make([]*wtype.LHComponent,0)
	dilutedsample3 := make([]*wtype.LHComponent,0)
	dilutedsample4 := make([]*wtype.LHComponent,0)

	
	diluentsample1 := mixer.SampleForTotalVolume(Diluent,TotalVolume)
	dilutedsample1 = append(dilutedsample1,diluentsample1)
	solutionsample1 := mixer.Sample(Solution,DilutionVolume)
	dilutedsample1 = append(dilutedsample1,solutionsample1)
	dilutedsample1mix := Mix(dilutedsample1...)
	DilutedSample1 = dilutedsample1mix

	diluentsample2 := mixer.SampleForTotalVolume(Diluent,TotalVolume)
	dilutedsample2 = append(dilutedsample2,diluentsample2)
	solutionsample2 := mixer.Sample(dilutedsample1mix,DilutionVolume)
	dilutedsample2 = append(dilutedsample2,solutionsample2)
	dilutedsample2mix := Mix(dilutedsample2...)
	DilutedSample2 = dilutedsample2mix

	diluentsample3 := mixer.SampleForTotalVolume(Diluent,TotalVolume)
	dilutedsample3 = append(dilutedsample3,diluentsample3)
	solutionsample3 := mixer.Sample(dilutedsample2mix,DilutionVolume)
	dilutedsample3 = append(dilutedsample3,solutionsample3)
	dilutedsample3mix := Mix(dilutedsample3...)
	DilutedSample3 = dilutedsample3mix

	diluentsample4 := mixer.SampleForTotalVolume(Diluent,TotalVolume)
	dilutedsample4 = append(dilutedsample4,diluentsample4)
	solutionsample4 := mixer.Sample(dilutedsample3mix,DilutionVolume)
	dilutedsample4 = append(dilutedsample4,solutionsample4)
	dilutedsample4mix := Mix(dilutedsample4...)
	DilutedSample4 = dilutedsample4mix

}
// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed
//correctly. Optionally, destructive tests can be performed to validate
//results on a dipstick basis
Validation {

}
