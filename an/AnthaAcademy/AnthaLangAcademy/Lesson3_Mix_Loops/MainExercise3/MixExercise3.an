// example protocol demonstrating the use of the SampleForTotalVolume function
protocol MixExercise3

import (
	"github.com/antha-lang/antha/antha/anthalib/wtype"
	"github.com/antha-lang/antha/antha/anthalib/mixer"
)


// Input parameters for this protocol (data)
Parameters (
	DilutionVolume Volume // e.g. 2ul
	TotalVolume Volume // e.g. 20ul
	NumberOfSerialDilutions int
)

// Data which is returned from this protocol, and data types
Data (

)


// Physical Inputs to this protocol with types
Inputs (
	Solution *wtype.LHComponent
	Diluent *wtype.LHComponent
	OutPlateType *wtype.LHPlate
)

// Physical outputs from this protocol with types
Outputs (
	DilutedSamples []*wtype.LHComponent
)

Requirements {

}

// Conditions to run on startup
Setup {

}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	// make empty slice of LHComponents (i.e. of length 0) ready to sequentially add all samples to
	// See golangbook chapter 6 for more details on slices and arrays
	dilutedsample1 := make([]*wtype.LHComponent,0)
	dilutedsample := make([]*wtype.LHComponent,0)

	// SampleForTotalVolume will "top up" solution to the TotalVolume with Diluent.
	// In this case it will still add diluent first but calculates the volume to add by substracting the volumes of subsequent components

	diluentsample1 := mixer.SampleForTotalVolume(Diluent,TotalVolume) // i.e. if TotalVolume == 20ul and SolutionVolume == 2ul then 18ul of Diluent will be sampled here
	dilutedsample1 = append(dilutedsample1,diluentsample1)
	solutionsample1 := mixer.Sample(Solution,DilutionVolume)
	dilutedsample1 = append(dilutedsample1,solutionsample1)
	dilutedsamplemix := MixInto(OutPlateType,"",dilutedsample1...)
	dilutedSamples := append(DilutedSamples, dilutedsamplemix)

	for i:=0; i < NumberOfSerialDilutions; i++{
	nextdiluentsample := mixer.SampleForTotalVolume(Diluent,TotalVolume)
	dilutedsample = append(dilutedsample,nextdiluentsample)
	solutionsample := mixer.Sample(dilutedsamplemix,DilutionVolume)
	dilutedsample = append(dilutedsample,solutionsample)
	nextdilutedsamplemix := Mix(dilutedsample...)
	dilutedSamples = append(DilutedSamples, nextdilutedsamplemix)
	dilutedsamplemix = nextdilutedsamplemix
		}

	DilutedSamples = dilutedSamples


	// The Sample functions will not generate liquid handling instructions on their own
	// We need to tell Antha what to do with samples
	// For this we need to use one of the Mix functions
	// therefore finally we use Mix to combine samples into a new component



	// Now we have an antha element which will generate liquid handling instructions
	// let's see how to actually run the protocol
	// open the terminal and
	// work your way through the lessons there showing how to specify parameters and different types of workflow


}
// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed
//correctly. Optionally, destructive tests can be performed to validate
//results on a dipstick basis
Validation {

}
